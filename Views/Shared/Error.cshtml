@model ErrorViewModel
@{
    ViewData["Title"] = "Error";
    var statusCode = Context.Response.StatusCode;
    var errorTitle = "Error";
    var errorMessage = Model.ErrorMessage;
    
    // Set default error messages based on status code
    if (string.IsNullOrEmpty(errorMessage))
    {
        switch (statusCode)
        {
            case 404:
                errorTitle = "Page Not Found";
                errorMessage = "The page you are looking for does not exist or might have been moved.";
                break;
            case 500:
                errorTitle = "Server Error";
                errorMessage = "An error occurred while processing your request. Please try again later.";
                break;
            default:
                errorTitle = "Error";
                errorMessage = "An unexpected error occurred.";
                break;
        }
    }
}

<div class="container my-5 text-center">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <h1 class="mb-3">@errorTitle</h1>
            
            @if (statusCode != 200)
            {
                <div class="mb-3">
                    <span class="badge bg-danger">@statusCode</span>
                </div>
            }
            
            <p class="mb-4">@errorMessage</p>
            
            <a href="@Url.Action("Index", "Home")" class="btn btn-primary">
                Return to Home Page
            </a>
            
            @if (Model.ShowRequestId)
            {
                <div class="mt-5 text-muted">
                    <small>Request ID: <code>@Model.RequestId</code></small>
                </div>
            }
        </div>
    </div>
</div>
